--2장. 데이터 조회  구문
/*
 DML : SELECT, TNSERT, UPDATE, DELETE
 DDL : 
*/


SELECT 컬럼1, 컬럼2
FROM 테이블명,

SELECT employee_id, first_name, department_id
FROM   employees,

SELECT *
FROM    empleyees;


--2.2 SELECT 구문 + 조건절(=필터링) : 특정 조건에 맞는 데이터만 조회
SELECT employee_id, first_name, department_id
FROM   employees,              --FROM 절
WHERE department_id = 100;     --WHERE (조건절)

--자동서식 적용: 원하는 쿼리를 블럭 씌운후 ctrl+F7 (자동 서식이 적용)
--TAB 자주사용

--2-3.3 비교연산자
--숫자비교
--문자비교 (P,7)

[예제2-11] 성이 KINGDLS 사원의 정보를 조회하시오
--사원의 정보 : 사번, 이름, 성, 전화번호, 이메일, 매니저, 부서, 보너스,..
--    last_name, 이 king 인지 비교!! (=같다, 크다, 작다..)

SELECT employee_id 사번, last_name 성, department_id 부서
FROM employees
WHERE last_name = 'King'; -- 대문자로 시작하는 king
--WHERE last_name = 'King'; -- 대문자로 시작하는 king

--문자열 패턴 : 특정 조건의 문자를 찾는 과정
--ex> 전화번호, 이메일 ==> 010-1234-5678 vs emailID@domain.com
-- * SQL은 대,소문자를 구분하지 않으나, 문자 데이터는 구분함!!
--  [명령어]                          [문자값]


[예제2-12] 입사일이 2004년 1월 1일 이전인 사원의 정보(=사번, 이름, 입사일,)
-- 2004년 1월 1일 이전, 처음부터 ~ 2003년 12월 31일 까지
-- 범위 비교: 이상, 이하
SELECT *
FROM    employees;
WHERE   hire_date > '01-JAN-04'; -- 년/월/일

--'': 작은 따옴표는 1) 문자 데이터와 2) 시간/날짜 데이터를 표기할때 사용
--'': 큰 따옴표는 ??? 컬럼의 별칭(=Allas)을 지정할 때, 공백이 있는 단어를 조합할때



--오늘 날짜 출력하기
SELECT  SYSDATE
FROM dual/

-- 1) JAN 대신 01,년/월/일 순서
SELECT employees_id 사번, last_name 성, department_id 부서, hire_date 입사일
FROM    employees;
WHERE   hire_date < '04/01/01'; --14rows

--데이터베이스 설정 보기
--NLS(Nationl Languagr Support : 나라별/언어별 설정 지원)
--1. 현제 NLS 세팅 확인
SELECT *
FROM vsnle_parameters;

-- 2.sqlDeveloper > 도구 > 환경설정 > NLS를 확인!

2.3.4 AND, OR, NOT 논리조건 연산자
--여러개의 조건이 오는 경우 필요한 연산자
--AND 연산은 조건이 모드 TRUE일때, 최종 TRUE를 반환
[예제2-13] 30번 부서 사원중 급여가 10000이하인 사원의 정보를 조회하시오
(여기서 정보는 사번, 이름, 급여, 부서코드를 똣함)

--SQL (=Structured Query Language, 구조화된 질의 언어 <--> 패턴)
SELECT  employee_id, first_name, salary, department_id
FROM    employees
WHERE   department_id = 30 --첫번째 조건
AND salary <= 10000;       --두번째 조건



















